{
  "version": 3,
  "file": "demo-xemitter-unsubscribe.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/demo-xemitter-unsubscribe.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/EXPERIMENTS/XEMITTER'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n#...........................................................................................................\nPD                        = require '../..'\njr                        = JSON.stringify\ndefer                     = setImmediate\n{ $\n  $async }                = PD\nXE                        = PD.XE.new_scope()\n\n\n############################################################################################################\ndo =>\n\n  #---------------------------------------------------------------------------------------------------------\n  add       = ( d ) -> XE.emit PD.new_datom '^result', ( d.a + d.b )\n  multiply  = ( d ) -> XE.emit PD.new_datom '^result', ( d.a * d.b )\n\n  #---------------------------------------------------------------------------------------------------------\n  # XE.listen_to_all ( key, d ) -> info 'µ1', \"#{key}: #{rpr d}\"\n  XE.listen_to '^compute', ( d ) -> help 'µ1', \"^compute: #{rpr d}\"\n  XE.listen_to '^result',  ( d ) -> warn 'µ1', \"^result: #{rpr d}\"\n  #.........................................................................................................\n  whisper \"subscribe add()\"\n  unsubscribe_add = XE.listen_to '^compute', add\n  await XE.emit PD.new_datom '^compute', { a: 42, b: 108, }\n  #.........................................................................................................\n  whisper \"unsubscribe add()\"\n  unsubscribe_add()\n  await XE.emit PD.new_datom '^compute', { a: 42, b: 108, }\n  #.........................................................................................................\n  whisper \"subscribe multiply()\"\n  unsubscribe_multiply = XE.listen_to '^compute', multiply\n  await XE.emit PD.new_datom '^compute', { a: 42, b: 108, }\n  #.........................................................................................................\n  whisper \"unsubscribe multiply()\"\n  unsubscribe_multiply()\n  await XE.emit PD.new_datom '^compute', { a: 42, b: 108, }\n\n\n\n\n\n"
  ]
}