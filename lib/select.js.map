{
  "version": 3,
  "file": "select.js",
  "sourceRoot": "..",
  "sources": [
    "src/select.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;IAAA,oBAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAZ5B;;;EAeA,IAAC,CAAA,iBAAD,GAAwB;;EACxB,IAAC,CAAA,oBAAD,GAAwB,sHAhBxB;;;EAmBA,IAAC,CAAA,kBAAD,GAAsB,QAAA,CAAE,QAAF,CAAA;IAEpB,IAAA,CAAA,CAAmB,CAAE,GAAG,CAAC,QAAJ,CAAa,QAAb,CAAF,CAAA,IAA8B,CAAE,QAAQ,CAAC,UAAT,CAAoB,GAApB,CAAF,CAA9B,IAA8D,CAAE,QAAQ,CAAC,MAAT,GAAkB,CAApB,CAAjF,CAAA;;AAAA,aAAO,KAAP;;AACA,WAAO,QAAU;EAHG,EAnBtB;;;EAyBA,IAAC,CAAA,iBAAD,GAAqB,QAAA,CAAE,GAAF,EAAO,QAAP,CAAA;AAGnB,QAAA,CAAA,EAAA,UAAA,EAAA,SAAA,EAAA,GAAA,EAAA,eAAA,EAAA,cAAA,EAAA,CAAA;;;IAAA,IAAA,CAAA,CAAO,CAAE,GAAG,CAAC,QAAJ,CAAa,GAAb,CAAF,CAAA,IAAyB,yDAAhC,CAAA;MACE,MAAM,IAAI,KAAJ,CAAU,CAAA,yBAAA,CAAA,CAA4B,GAAA,CAAI,GAAJ,CAA5B,CAAA,CAAV,EADR;;IAEA,UAAA,GAAa,SAAS,CAAC;IACvB,KAAA,eAAA;;MACE,IAA0B,CAAA,KAAO,EAAP,IAAA,CAAA,KAAW,IAAX,IAAA,CAAA,KAAiB,QAA3C;QAAA,OAAO,UAAY,CAAA,CAAA,EAAnB;;IADF,CAHA;;;IAOA,IAAA,CAAA,CAAO,CAAE,GAAG,CAAC,QAAJ,CAAa,QAAb,CAAF,CAAA,IAA8B,sEAArC,CAAA;MACE,MAAM,IAAI,KAAJ,CAAU,CAAA,wBAAA,CAAA,CAA2B,GAAA,CAAI,QAAJ,CAA3B,CAAA,CAAV,EADR;;IAEA,eAAA,GAAkB,cAAc,CAAC;IACjC,KAAA,oBAAA;;MACE,IAA+B,CAAA,KAAO,EAAP,IAAA,CAAA,KAAW,IAAX,IAAA,CAAA,KAAiB,QAAhD;QAAA,OAAO,eAAiB,CAAA,CAAA,EAAxB;;IADF;IAGA,IAAgB,gCAAA,IAA4B,CAAI,OAAE,UAAU,CAAC,KAAX,EAAA,aAAoB,eAAe,CAAC,MAApC,EAAA,GAAA,MAAF,CAAhD;;AAAA,aAAO,MAAP;;IACA,IAAgB,CAAM,8BAAN,CAAA,IAAoC,CAAE,yBAAF,CAApD;AAAA,aAAO,MAAP;;IACA,IAAgB,gCAAA,IAA4B,CAAI,CAAE,UAAU,CAAC,MAAX,KAAqB,eAAe,CAAC,MAAvC,CAAhD;AAAA,aAAO,MAAP;;IACA,IAAgB,8BAAA,IAA0B,CAAI,CAAE,UAAU,CAAC,IAAX,KAAmB,eAAe,CAAC,IAArC,CAA9C;AAAA,aAAO,MAAP;;AACA,WAAO;EApBY,EAzBrB;;;;;EAmDA,IAAC,CAAA,kBAAD,GAAsB,QAAA,CAAE,QAAF,CAAA;AACpB,QAAA,KAAA,EAAA,GAAA,EAAA;IAAA,IAA2C,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA3C;AAAA,aAAO,CAAE,UAAF,EAAiB,QAAjB,EAAP;;IACA,IAA+D,CAAE,IAAA,GAAO,GAAG,CAAC,OAAJ,CAAY,QAAZ,CAAT,CAAA,KAAmC,MAAlG;MAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,8BAAA,CAAA,CAAiC,IAAjC,CAAA,CAAV,EAAN;;IACA,IAA2C,iDAA3C;AAAA,aAAO,CAAE,KAAF,EAAiB,GAAjB,EAAP;;IACA,IAA2C,kDAA3C;AAAA,aAAO,CAAE,YAAF,EAAiB,KAAK,CAAC,MAAvB,EAAP;;IACA,MAAM,IAAI,KAAJ,CAAU,CAAA,wBAAA,CAAA,CAA2B,GAAA,CAAI,QAAJ,CAA3B,CAAA,CAAV;EALc,EAnDtB;;;EA2DA,IAAC,CAAA,WAAD,GAAe,QAAA,CAAE,CAAF,EAAK,KAAL,EAAY,QAAZ,EAAsB,QAAtB,CAAA;AACN,YAAO,KAAP;AAAA,WACA,UADA;eACmB,QAAA,CAAoB,CAApB,EADnB;;AAAA,WAGA,YAHA;eAGmB,IAAC,CAAA,iBAAD,CAAoB,CAAC,CAAC,GAAtB,EAA4B,QAA5B;AAHnB;IAIP,MAAM,IAAI,KAAJ,CAAU,CAAA,8BAAA,CAAA,CAAiC,GAAA,CAAI,KAAJ,CAAjC,CAAA,CAAV;EALO,EA3Df;;;;;EAsEA,IAAC,CAAA,MAAD,GAAU,QAAA,CAAE,CAAF,EAAA,GAAK,SAAL,CAAA;AACR,QAAA,qBAAA,EAAA,KAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,eAAA,EAAA,QAAA,EAAA,QAAA,EAAA;IAAA,IAAqE,SAAS,CAAC,MAAV,KAAoB,CAAzF;MAAA,MAAM,IAAI,KAAJ,CAAU,iDAAV,EAAN;;IACA,IAAA,GAAwB;IACxB,eAAA,GAAwB;IACxB,qBAAA;;AAAuD;MAAA,KAAA,2CAAA;;qBAA7B,IAAC,CAAA,kBAAD,CAAoB,QAApB;MAA6B,CAAA;;;IACvD,KAAA,uDAAA;MAAI,CAAE,KAAF,EAAS,QAAT;MACF,IAAG,KAAA,KAAS,KAAZ;QAAwB,IAAI,CAAC,IAAL,CAAsB,QAAtB,EAAxB;OAAA,MAAA;QACwB,eAAe,CAAC,IAAhB,CAAsB,QAAtB,EADxB;;IADF;IAGA,KAAA,CAAM,OAAN,EAAe,CAAE,IAAF,EAAQ,eAAR,CAAf;IACA,QAAA,GAAW;IACX,KAAA,mDAAA;;MACE,IAAA,CAAoB,IAAC,CAAA,WAAD,CAAa,CAAb,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,QAAjC,CAApB;AAAA,eAAO,MAAP;;IADF;AAEA,WAAO;EAZC;AAtEV",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/SELECT'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n\n#-----------------------------------------------------------------------------------------------------------\n@_event_keypattern    = ///^ (?<sigil>[<^>~])       (?:(?<prefix>[^:<^>~!$%&\\/()=?+*'\",.;|\\#\\s]+?):)?     (?<name>[^:<^>~!$%&\\/()=?+*'\",.;|\\#\\s]+) $///\n@_selector_keypattern = ///^ (?<sigils>[<^>~]*) \\s* (?:(?<prefix>[^:<^>~!$%&\\/()=?+*'\",.;|\\#\\s]+?):)? \\s* (?<name>[^:<^>~!$%&\\/()=?+*'\",.;|\\#\\s]*) $///\n\n#-----------------------------------------------------------------------------------------------------------\n@_tag_from_selector = ( selector ) ->\n  ### Return tag if `selector` is marked as tag selector, `null` otherwise. ###\n  return null unless ( CND.isa_text selector ) and ( selector.startsWith '#' ) and ( selector.length > 1 )\n  return selector[ 1 .. ]\n\n#-----------------------------------------------------------------------------------------------------------\n@_match_keypattern = ( key, selector ) ->\n  #.........................................................................................................\n  ### TAINT code duplication ###\n  unless ( CND.isa_text key ) and ( key_match = key.match @_event_keypattern )?\n    throw new Error \"µ83744 illegal event key #{rpr key}\"\n  key_facets = key_match.groups\n  for k, v of key_facets\n    delete key_facets[ k ] if v in [ '', null, undefined, ]\n  #.........................................................................................................\n  ### TAINT code duplication ###\n  unless ( CND.isa_text selector ) and ( selector_match = selector.match @_selector_keypattern )?\n    throw new Error \"µ83744 illegal selector #{rpr selector}\"\n  selector_facets = selector_match.groups\n  for k, v of selector_facets\n    delete selector_facets[ k ] if v in [ '', null, undefined, ]\n  #.........................................................................................................\n  return false if selector_facets.sigils? and not ( key_facets.sigil in selector_facets.sigils )\n  return false if ( not selector_facets.prefix? ) and ( key_facets.prefix? )\n  return false if selector_facets.prefix? and not ( key_facets.prefix is selector_facets.prefix )\n  return false if selector_facets.name? and not ( key_facets.name is selector_facets.name )\n  return true\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@_classify_selector = ( selector ) ->\n  return [ 'function',    selector,     ] if CND.isa_function selector\n  throw new Error \"µ85175 expected a text, got a #{type}\" unless ( type = CND.type_of selector ) is 'text'\n  return [ 'tag',         tag,          ] if ( tag = @_tag_from_selector selector )?\n  return [ 'keypattern',  match.groups, ] if ( match = selector.match @_keypattern )?\n  throw new Error \"µ85652 illegal selector #{rpr selector}\"\n\n#-----------------------------------------------------------------------------------------------------------\n@_select_one = ( d, clasz, selector, settings ) ->\n  return switch clasz\n    when 'function'   then  selector            d\n    # when 'tag'        then  @_match_tag         d,      selector\n    when 'keypattern' then  @_match_keypattern  d.key,  selector\n  throw new Error \"µ86129 illegal selector class #{rpr clasz}\"\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@select = ( d, selectors... ) ->\n  throw new Error \"µ86606 expected one or more selectors, got none\" if selectors.length is 0\n  tags                  = []\n  other_selectors       = []\n  classes_and_selectors = ( @_classify_selector selector for selector in selectors )\n  for [ clasz, selector, ] in classes_and_selectors\n    if clasz is 'tag' then  tags.push             selector\n    else                    other_selectors.push  selector\n  debug '37773', [ tags, other_selectors, ]\n  settings = null ### !!!!!!!!!!!!!!! ###\n  for selector in other_selectors\n    return false unless @_select_one d, clasz, selector, settings\n  return true\n\n"
  ]
}