{
  "version": 3,
  "file": "select.js",
  "sourceRoot": "..",
  "sources": [
    "src/select.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,gBAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,CAAA,CAAE,MAAF,EACE,EADF,CAAA,GAC4B,GAD5B,EAbA;;;EAgBA,KAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,CAAA,GAE4B,KAF5B,EAjBA;;;;;EAyBA,IAAC,CAAA,MAAD,GAAU,QAAA,CAAE,CAAF,EAAK,QAAL,CAAA;AACV,QAAA,GAAA,EAAA;IAAE,IAA8D,gBAA9D;MAAA,MAAM,IAAI,KAAJ,CAAU,sCAAV,EAAN;;IACA,KAAoB,CAAE,CAAE,GAAG,CAAC,MAAJ,CAAW,CAAX,CAAF,CAAA,IAAqB,CAAE,aAAF,CAAvB,CAApB;AAAA,aAAO,MAAP;KADF;;IAGE,OAAA,GAAU;IACV,IAAG,QAAQ,CAAC,QAAT,CAAkB,UAAlB,CAAH;MACE,OAAA,GAAY;MACZ,QAAA,GAAY,QAAQ;MACpB,IAAwE,QAAA,KAAY,EAApF;QAAA,MAAM,IAAI,KAAJ,CAAU,oDAAV,EAAN;OAHF;;IAKA,KAAiE,gBAAgB,CAAC,IAAjB,CAAsB,QAAtB,CAAjE;;MAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,wBAAA,CAAA,CAA2B,GAAA,CAAI,QAAJ,CAA3B,CAAA,CAAV,EAAN;;IAEA,IAAgB,CAAE,CAAI,OAAN,CAAA,IAAoB,oCAAe,KAAf,CAApC;;AAAA,aAAO,MAAP;;AACA,WAAO,CAAC,CAAC,GAAF,KAAS;EAbR;;EAeV,gBAAA,GAAmB;AAxCnB",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/SELECT'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ assign\n  jr }                    = CND\n#...........................................................................................................\ntypes                     = require './_types'\n{ isa\n  validate\n  type_of }               = types\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@select = ( d, selector ) ->\n  throw new Error \"µ86606 expected a selector, got none\" unless selector?\n  return false unless ( ( isa.object d ) and ( d.key? ) )\n  #.........................................................................................................\n  stamped = false\n  if selector.endsWith '#stamped'\n    stamped   = true\n    selector  = selector[ ... selector.length - 8 ]\n    throw new Error \"µ33982 selector cannot just contain tag '#stamped'\" if selector is ''\n  #.........................................................................................................\n  throw new Error \"µ37783 illegal selector #{rpr selector}\" unless selector_pattern.test selector\n  #.........................................................................................................\n  return false if ( not stamped ) and ( d.$stamped ? false )\n  return d.key is selector\n\nselector_pattern = /^[<^>\\[~\\]][^<^>\\[~\\]]*$/\n\n\n\n"
  ]
}