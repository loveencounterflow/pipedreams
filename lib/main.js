// Generated by CoffeeScript 2.5.1
(function() {
  'use strict';
  var CND, L, Pipedreams, Pipestreams, badge, debug, echo, help, info, isa, jr, rpr, type_of, types, urge, validate, warn, whisper;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'PIPEDREAMS/MAIN';

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  info = CND.get_logger('info', badge);

  urge = CND.get_logger('urge', badge);

  help = CND.get_logger('help', badge);

  whisper = CND.get_logger('whisper', badge);

  echo = CND.echo.bind(CND);

  //...........................................................................................................
  ({jr} = CND);

  // override_sym              = Symbol.for 'override'
  //...........................................................................................................
  types = require('./_types');

  ({isa, validate, type_of} = types);

  ({Pipestreams} = require('pipestreams'));

  Pipedreams = (function() {
    //-----------------------------------------------------------------------------------------------------------
    class Pipedreams extends Pipestreams {
      // @include require './xemitter'
      //---------------------------------------------------------------------------------------------------------
      constructor(settings = null) {
        super();
        this.settings = settings;
      }

    };

    // @extend   object_with_class_properties
    Pipedreams.include(require('pipestreams'));

    Pipedreams.include(require('./add_position'));

    Pipedreams.include(require('./datoms'));

    Pipedreams.include(require('./group-by'));

    Pipedreams.include(require('./overrides'));

    Pipedreams.include(require('./select'));

    Pipedreams.include(require('./transforms'));

    return Pipedreams;

  }).call(this);

  // @specs    = {}
  // @isa      = Multimix.get_keymethod_proxy @, isa
  // # @validate = Multimix.get_keymethod_proxy @, validate
  // declarations.declare_types.apply @

  //###########################################################################################################
  module.exports = L = new Pipedreams();

  L.Pipedreams = Pipedreams;

}).call(this);

//# sourceMappingURL=main.js.map
