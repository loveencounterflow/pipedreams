{
  "version": 3,
  "file": "overrides.js",
  "sourceRoot": "..",
  "sources": [
    "src/overrides.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,aAAA,EAAA,GAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,CAAA,CAAE,MAAF,EACE,EADF,CAAA,GAC4B,GAD5B,EAbA;;;EAgBA,EAAA,GAA4B,OAAA,CAAQ,OAAR;;EAC5B,CAAA,CAAE,CAAF,EACE,MADF,EAEE,MAFF,EAGE,KAHF,CAAA,GAG4B,EAH5B,EAjBA;;;EAsBA,CAAA,CAAE,EAAF,EACE,IADF,EAEE,MAFF,CAAA,GAE4B,GAF5B,EAtBA;;;EA0BA,aAAA,GAA4B,MAAM,CAAC,GAAP,CAAW,UAAX,EA1B5B;;;EA8BA,QAAA,GAAW,QAAA,CAAE,QAAF,CAAA;AACT,QAAA,SAAA,EAAA;IAAA,SAAA,GAAY;IACZ,QAAA,GAAY;MAAE,MAAA,EAAQ,IAAV;MAAgB,GAAA,EAAK,YAArB;MAAmC,QAAA,EAAU;IAA7C;IACZ,QAAA,GAAY,MAAA,CAAO,CAAA,CAAP,EAAW,QAAX,EAAqB,QAArB;AACZ,WAAO,CAAA,CAAE,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;MACP,IAAG,MAAA,CAAO,CAAP,EAAU,UAAV,CAAH;QACE,IAAA,CAAK,CAAL;QACA,IAAA,CAAK,EAAE,CAAC,gBAAH,CAAoB,QAAQ,CAAC,GAA7B,EAAkC,SAAlC,CAAL;QACA,SAAA,GAAY,KAHd;OAAA,MAIK,IAAG,4BAAA,IAA4B,MAAA,CAAO,CAAP,EAAU,QAAQ,CAAC,MAAnB,CAA/B;;UACH,YAAa;;QACb,SAAS,CAAC,IAAV,CAAe,CAAC,CAAC,KAAjB,EAFG;OAAA,MAAA;QAIH,IAAA,CAAK,CAAL,EAJG;;AAKL,aAAO;AAEP,aAAO;IAZA,CAAF;EAJE;AA9BX",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/OVERRIDES'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ assign\n  jr }                    = CND\n#...........................................................................................................\nPD                        = require '../..'\n{ $\n  $async\n  select\n  stamp }                 = PD\n#...........................................................................................................\n{ jr\n  copy\n  assign }                = CND\n#...........................................................................................................\noverrides_sym             = Symbol.for 'override'\n\n\n#-----------------------------------------------------------------------------------------------------------\n$collect = ( settings ) ->\n  collector = null\n  defaults  = { select: null, key: 'collection', callback: null, }\n  settings  = assign {}, defaults, settings\n  return $ ( d, send ) ->\n    if select d, '~collect'\n      send d\n      send PD.new_single_event settings.key, collector\n      collector = null\n    else if ( not settings.select )? or select d, settings.select\n      collector ?= []\n      collector.push d.value\n    else\n      send d\n    return null\n\n    return null\n"
  ]
}