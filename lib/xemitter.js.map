{
  "version": 3,
  "file": "xemitter.js",
  "sourceRoot": "..",
  "sources": [
    "src/xemitter.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/XEMITTER'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n#...........................................................................................................\n### https://github.com/sindresorhus/emittery ###\nEmittery                  = require 'emittery'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_emitter         = new Emittery()\n@_has_contractors = {}\n\n#-----------------------------------------------------------------------------------------------------------\n@_mark_as_primary = ( x ) -> { '~isa': 'XEMITTER/preferred', value: x, }\n@_filter_primary  = ( x ) -> CND.isa x, 'XEMITTER/preferred'\n@_get_primary     = ( values ) -> ( values.filter @_filter_primary )[ 0 ]?.value ? null\n\n#-----------------------------------------------------------------------------------------------------------\n@_get_ccl = ( channel, ctx, listener ) ->\n  switch arity = arguments.length\n    when 2 then [ channel, ctx, listener, ] = [ channel, null, ctx,       ]\n    when 3 then [ channel, ctx, listener, ] = [ channel, ctx,  listener,  ]\n    else throw new Error \"expected 2 or 3 arguments, got #{arity}\"\n  unless ( CND.isa_text channel ) and ( channel.length > 0 )\n    throw new Error \"expected a non-empty text for channel, got #{rpr channel}\"\n  return [ channel, ctx, listener, ]\n\n#-----------------------------------------------------------------------------------------------------------\n@_get_cl = ( ctx, listener ) ->\n  switch arity = arguments.length\n    when 1 then [ ctx, listener, ] = [ null, ctx,       ]\n    when 2 then [ ctx, listener, ] = [ ctx,  listener,  ]\n    else throw new Error \"expected 1 or 2 arguments, got #{arity}\"\n  return [ ctx, listener, ]\n\n#-----------------------------------------------------------------------------------------------------------\n@contract = ( channel, ctx, listener ) ->\n  [ channel, ctx, listener, ] = @_get_ccl arguments...\n  if @_has_contractors[ channel ]\n    throw new Error \"channel #{rpr channel} already has a primary listener\"\n  @_has_contractors[ channel ] = yes\n  @_emitter.on channel, ( data ) =>\n    return @_mark_as_primary await listener.call ctx, data\n  return listener\n\n#-----------------------------------------------------------------------------------------------------------\n@listen_to = ( channel, ctx, listener ) ->\n  [ channel, ctx, listener, ] = @_get_ccl arguments...\n  @_emitter.on channel, ( data ) -> await listener.call ctx, data\n  return listener\n\n#-----------------------------------------------------------------------------------------------------------\n@listen_to_all = ( ctx, listener ) ->\n  [ ctx, listener, ] = @_get_cl arguments...\n  @_emitter.onAny ( channel, data ) -> await listener.call ctx, channel, data\n  return listener\n\n#-----------------------------------------------------------------------------------------------------------\n@emit             = ( channel, data ) ->                                await @_emitter.emit channel, data\n@delegate         = ( channel, data ) ->                  @_get_primary await @_emitter.emit channel, data\n\n\n############################################################################################################\nfor name, value of L = @\n  ### TAINT poor man's 'callable' detection ###\n  continue unless CND.isa_function value.bind\n  L[ name ] = value.bind L\n"
  ]
}