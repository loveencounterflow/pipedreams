{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,CAAA,EAAA,UAAA,EAAA,WAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAZ5B;;;EAcA,CAAA,CAAE,EAAF,CAAA,GAA4B,GAA5B,EAdA;;;;EAiBA,KAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,CAAA,GAE4B,KAF5B;;EAGA,CAAA,CAAE,WAAF,CAAA,GAA4B,OAAA,CAAQ,aAAR,CAA5B;;EAGM;;IAAN,MAAA,WAAA,QAAyB,YAAzB,CAAA;;;MAWE,WAAa,YAAc,IAAd,CAAA;;QAAE,IAAC,CAAA;MAAH;;IAXf;;;IAEE,UAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,aAAR,CAAT;;IACA,UAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,gBAAR,CAAT;;IACA,UAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,UAAR,CAAT;;IACA,UAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,YAAR,CAAT;;IACA,UAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,aAAR,CAAT;;IACA,UAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,UAAR,CAAT;;IACA,UAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,cAAR,CAAT;;;;gBAhCF;;;;;;;;EA2CA,MAAM,CAAC,OAAP,GAAkB,CAAA,GAAI,IAAI,UAAJ,CAAA;;EACtB,CAAC,CAAC,UAAF,GAAkB;AA5ClB",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n{ jr, }                   = CND\n# override_sym              = Symbol.for 'override'\n#...........................................................................................................\ntypes                     = require './_types'\n{ isa\n  validate\n  type_of }               = types\n{ Pipestreams, }          = require 'pipestreams'\n\n#-----------------------------------------------------------------------------------------------------------\nclass Pipedreams extends Pipestreams\n  # @extend   object_with_class_properties\n  @include require 'pipestreams'\n  @include require './add_position'\n  @include require './datoms'\n  @include require './group-by'\n  @include require './overrides'\n  @include require './select'\n  @include require './transforms'\n  # @include require './xemitter'\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( @settings = null ) ->\n    super()\n    # @specs    = {}\n    # @isa      = Multimix.get_keymethod_proxy @, isa\n    # # @validate = Multimix.get_keymethod_proxy @, validate\n    # declarations.declare_types.apply @\n\n############################################################################################################\nmodule.exports  = L = new Pipedreams()\nL.Pipedreams    = Pipedreams\n\n\n\n"
  ]
}