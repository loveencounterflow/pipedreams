{
  "version": 3,
  "file": "transforms.js",
  "sourceRoot": "..",
  "sources": [
    "src/transforms.coffee"
  ],
  "names": [],
  "mappings": ";AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAZ5B;;;EAeA,IAAC,CAAA,eAAD,GAAmB,QAAA,CAAA,CAAA,EAAA;;;;AAIjB,WAAO,IAAC,CAAA,CAAD,CAAG,CAAE,CAAF,EAAK,IAAL,CAAA,GAAA;AACZ,UAAA;MAAI,IAAiB,GAAG,CAAC,OAAJ,CAAY,CAAZ,CAAjB;AAAA,eAAO,IAAA,CAAK,CAAL,EAAP;;MACA,IAAA,GAAO,GAAG,CAAC,OAAJ,CAAY,CAAZ;MACP,IAAA,CAAK,EAAE,CAAC,SAAH,CAAa,CAAA,CAAA,CAAA,CAAI,IAAJ,CAAA,CAAb,EAAyB,CAAzB,CAAL;AACA,aAAO;IAJC,CAAH;EAJU;AAfnB",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/TRANSFORMS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n\n#-----------------------------------------------------------------------------------------------------------\n@$as_type_datoms = ->\n  ### Given raw data events (RDEs), turn them into singleton datoms, using the results of `CND.type_of`\n  for the keys, so `'xy'` turns into `{ key: 'text', value: 'xy', }`, and `42` turns into `{ key: 'number',\n  value: 42, }`. ###\n  return @$ ( d, send ) =>\n    return send d if CND.isa_pod d\n    type = CND.type_of d\n    send PD.new_event \"^#{type}\", d\n    return null\n\n\n\n\n\n\n\n"
  ]
}