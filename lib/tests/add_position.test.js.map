{
  "version": 3,
  "file": "add_position.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/add_position.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/TESTS/ADD_POSITION'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\nL                         = require '../select'\nPD                        = require '../..'\n# { $, $async, }            = PD\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$add_position() with values\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [0,[{\"$first\":true,\"value\":1,\"key\":\"^value\",\"$dirty\":true},{\"$last\":true,\"value\":0,\"key\":\"^value\",\"$dirty\":true}],null]\n    [1,[{\"$dirty\":true,\"key\":\"^value\",\"value\":1,\"$first\":true,\"$last\":true}],null]\n    [2,[{\"$first\":true,\"value\":1,\"key\":\"^value\",\"$dirty\":true},{\"$last\":true,\"value\":2,\"key\":\"^value\",\"$dirty\":true}],null]\n    [3,[{\"$first\":true,\"value\":1,\"key\":\"^value\",\"$dirty\":true},{\"value\":2,\"key\":\"^value\"},{\"$last\":true,\"value\":3,\"key\":\"^value\",\"$dirty\":true}],null]\n    ]\n  #.........................................................................................................\n  run = ( n ) -> new Promise ( resolve, reject ) =>\n    source    = PD.new_push_source()\n    pipeline  = []\n    pipeline.push source\n    pipeline.push PD.$add_position()\n    # pipeline.push PD.$show()\n    pipeline.push PD.$collect()\n    pipeline.push PD.$watch ( collector ) -> resolve collector\n    pipeline.push PD.$drain()\n    PD.pull pipeline...\n    source.send idx for idx in [ 1 .. n ]\n    source.end()\n    return null\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = await run probe\n      resolve result\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$add_position() with datoms\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [0,[{\"$first\":true,\"key\":\"^foo\",\"idx\":1,\"$dirty\":true},{\"$last\":true,\"key\":\"^foo\",\"idx\":0,\"$dirty\":true}],null]\n    [1,[{\"$dirty\":true,\"idx\":1,\"key\":\"^foo\",\"$first\":true,\"$last\":true}],null]\n    [2,[{\"$first\":true,\"key\":\"^foo\",\"idx\":1,\"$dirty\":true},{\"$last\":true,\"key\":\"^foo\",\"idx\":2,\"$dirty\":true}],null]\n    [3,[{\"$first\":true,\"key\":\"^foo\",\"idx\":1,\"$dirty\":true},{\"key\":\"^foo\",\"idx\":2},{\"$last\":true,\"key\":\"^foo\",\"idx\":3,\"$dirty\":true}],null]\n    ]\n  #.........................................................................................................\n  run = ( n ) -> new Promise ( resolve, reject ) =>\n    source    = PD.new_push_source()\n    pipeline  = []\n    pipeline.push source\n    pipeline.push PD.$add_position()\n    # pipeline.push PD.$show()\n    pipeline.push PD.$collect()\n    pipeline.push PD.$watch ( collector ) -> resolve collector\n    pipeline.push PD.$drain()\n    PD.pull pipeline...\n    source.send PD.new_datom '^foo', { idx, } for idx in [ 1 .. n ]\n    source.end()\n    return null\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = await run probe\n      resolve result\n      return null\n  done()\n  return null\n\n\n\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"$add_position() with values\" ]\n  # test @[ \"$add_position() with datoms\" ]\n\n\n"
  ]
}