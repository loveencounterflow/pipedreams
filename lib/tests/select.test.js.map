{
  "version": 3,
  "file": "select.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/select.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/TESTS/SELECT'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\nL                         = require '../select'\nPD                        = require '../..'\n{ $\n  $async\n  select }                = PD\n#...........................................................................................................\ntypes                     = require '../_types'\n{ isa\n  validate\n  type_of }               = types\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"selector keypatterns\" ] = ( T, done ) ->\n#   probes_and_matchers = [\n#     [\"\",{\"sigils\":\"\",\"name\":\"\"},null]\n#     [\"^foo\",{\"sigils\":\"^\",\"name\":\"foo\"},null]\n#     [\"<foo\",{\"sigils\":\"<\",\"name\":\"foo\"},null]\n#     [\"  \",null,null]\n#     [\">foo\",{\"sigils\":\">\",\"name\":\"foo\"},null]\n#     [\"<>foo\",{\"sigils\":\"<>\",\"name\":\"foo\"},null]\n#     [\"<>^foo\",{\"sigils\":\"<>^\",\"name\":\"foo\"},null]\n#     [\"^ foo\",null,null]\n#     [\"^prfx:foo\",{\"sigils\":\"^\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n#     [\"<prfx:foo\",{\"sigils\":\"<\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n#     [\">prfx:foo\",{\"sigils\":\">\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n#     [\"<>prfx:foo\",{\"sigils\":\"<>\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n#     [\"<>^prfx:foo\",{\"sigils\":\"<>^\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n#     [\"^<>\",{\"sigils\":\"^<>\",\"name\":\"\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, ->\n#       R = ( probe.match L._selector_keypattern )?.groups ? null\n#       return null unless R?\n#       for key, value of R\n#         delete R[ key ] if value is undefined\n#       return R\n#   done()\n#   return null\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"datom keypatterns\" ] = ( T, done ) ->\n#   probes_and_matchers = [\n#     [\"text\",null,null]\n#     [\"^text\",{\"sigil\":\"^\",\"name\":\"text\"},null]\n#     [\"<bold\",{\"sigil\":\"<\",\"name\":\"bold\"},null]\n#     [\">bold\",{\"sigil\":\">\",\"name\":\"bold\"},null]\n#     [\"~collect\",{\"sigil\":\"~\",\"name\":\"collect\"},null]\n#     [\"~kwic:collect\",{\"sigil\":\"~\",\"prefix\":\"kwic\",\"name\":\"collect\"},null]\n#     [\"<kwic:bar\",{\"sigil\":\"<\",\"prefix\":\"kwic\",\"name\":\"bar\"},null]\n#     [\">kwic:bar\",{\"sigil\":\">\",\"prefix\":\"kwic\",\"name\":\"bar\"},null]\n#     [\">!kwic:bar\",null,null]\n#     [\"<>kwic:bar\",null,null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, ->\n#       R = ( probe.match L._datom_keypattern )?.groups ? null\n#       return null unless R?\n#       for key, value of R\n#         delete R[ key ] if value is undefined\n#       return R\n#   done()\n#   return null\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"classify_selector\" ] = ( T, done ) ->\n#   probes_and_matchers = [\n#     [\"#justatag\",[\"tag\",\"justatag\"],'illegal']\n#     [\"^bar\",[\"keypattern\",{\"sigils\":\"^\",\"name\":\"bar\"}],null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, ->\n#       probe = ( -> ) if probe.startsWith '!!!'\n#       R     = L._classify_selector probe\n#       if R[ 0 ] is 'keypattern'\n#         for key, value of R[ 1 ]\n#           delete R[ 1 ][ key ] if value is undefined\n#       else if R[ 0 ] is 'function'\n#         R[ 1 ] = null\n#       return R\n#   done()\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"select 2\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[ {key:'^number',value:42,$stamped:true}, '^number'],false]\n    [[ {key:'<italic',$stamped:true}, '<italic'],false]\n    [[ {key:'<italic',$stamped:true}, '>italic'],false]\n    [[ {key:'^number',value:42}, '^number'],true]\n    [[ {key:'^number',value:42,$stamped:true}, '^number#stamped'],true]\n    [[ {key:'<italic',$stamped:true}, '<italic#stamped'],true]\n    [[ {key:'<italic',$stamped:true}, '>italic#stamped'],false]\n    [[ {key:'<italic',$stamped:true}, '<italic#stamped'],true]\n    [[ {key:'<italic'}, '<italic#stamped'],true]\n    [[ {key:'<italic'}, '>italic#stamped'],false]\n    [[ {key:'<italic',$stamped:true}, '>italic'],false]\n    [[ {key:\"*data\"},'*data'],null,'illegal selector']\n    [[ {key:\"data>\"},'data>'],null,'illegal selector']\n    [[ {key:\"%data\"},'%data'],null,'illegal selector']\n    [[ {key:\"[data\"},'[data'],true,null]\n    [[ {key:\"data]\"},'data]'],null,'illegal selector']\n    [[ {key:\"]data\"},']data'],true,null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, ->\n      [ d, selector, ] = probe\n      return PD.select d, selector\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"select ignores values other than PODs\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[ null, '^number',],false]\n    [[ 123, '^number',],false]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ d, selector, ] = probe\n      try\n        resolve PD.select d, selector\n      catch error\n        return resolve error.message\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_regex performance, runaway test\" ] = ( T, done ) ->\n  ###\n  See https://github.com/loveencounterflow/runaway-regex-test\n  and select-benchmark in this project\n  ###\n\n\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"selector keypatterns\" ]\n  # test @[ \"select 2\" ]\n\n"
  ]
}