{
  "version": 3,
  "file": "select.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/select.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/TESTS/SELECT'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\nL                         = require '../select'\n# PS                        = require '../..'\n# { $, $async, }            = PS\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_prune = ->\n  for name, value of @\n    continue if name.startsWith '_'\n    delete @[ name ] unless name in include\n  return null\n\n\n#-----------------------------------------------------------------------------------------------------------\nf = ( T, method, probe, matcher, errmsg_pattern ) ->\n  errmsg_pattern = if errmsg_pattern? then ( new RegExp errmsg_pattern ) else null\n  try\n    result = await method()\n  catch error\n    # throw error\n    if errmsg_pattern? and ( errmsg_pattern.test error.message )\n      echo CND.green jr [ probe, null, errmsg_pattern.source, ]\n      T.ok true\n    else\n      echo CND.orange jr [ probe, null, error.message, ]\n      # return reject \"failed with #{error.message}\"\n    return null\n  if CND.equals result, matcher\n    T.ok true\n    echo CND.lime jr [ probe, result, null, ]\n  else\n    T.fail \"neq: result #{jr result}, matcher #{jr matcher}\"\n    echo CND.red jr [ probe, result, null, ]\n  # return resolve result\n  return result\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"keypattern\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"\",{\"sigils\":\"\",\"name\":\"\"},null]\n    [\"^foo\",{\"sigils\":\"^\",\"name\":\"foo\"},null]\n    [\"<foo\",{\"sigils\":\"<\",\"name\":\"foo\"},null]\n    [\"  \",{\"sigils\":\"\",\"name\":\"\"},null]\n    [\">foo\",{\"sigils\":\">\",\"name\":\"foo\"},null]\n    [\"<>foo\",{\"sigils\":\"<>\",\"name\":\"foo\"},null]\n    [\"<>^foo\",{\"sigils\":\"<>^\",\"name\":\"foo\"},null]\n    [\"^ foo\",{\"sigils\":\"^\",\"name\":\"foo\"},null]\n    [\"<  foo\",{\"sigils\":\"<\",\"name\":\"foo\"},null]\n    [\"> foo\",{\"sigils\":\">\",\"name\":\"foo\"},null]\n    [\"<> foo\",{\"sigils\":\"<>\",\"name\":\"foo\"},null]\n    [\"^<> foo\",{\"sigils\":\"^<>\",\"name\":\"foo\"},null]\n    ['< > ^ foo',null,\"Cannot read property 'groups' of null\"]\n    [\"^prfx:foo\",{\"sigils\":\"^\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n    [\"<prfx:foo\",{\"sigils\":\"<\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n    [\">prfx:foo\",{\"sigils\":\">\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n    [\"<>prfx:foo\",{\"sigils\":\"<>\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n    [\"<>^prfx:foo\",{\"sigils\":\"<>^\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n    [\"^ prfx: foo\",{\"sigils\":\"^\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n    [\"<  prfx: foo\",{\"sigils\":\"<\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n    [\"> prfx: foo\",{\"sigils\":\">\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n    [\"<> prfx: foo\",{\"sigils\":\"<>\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n    [\"^<> prfx: foo\",{\"sigils\":\"^<>\",\"prefix\":\"prfx\",\"name\":\"foo\"},null]\n    [\"< > ^ prfx: foo\",null,\"Cannot read property 'groups' of null\"]\n    [\"^<>\",{\"sigils\":\"^<>\",\"name\":\"\"},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, errmsg_pattern, ] in probes_and_matchers\n    method = ->\n      R = ( probe.match L._keypattern )?.groups ? null\n      return null unless R?\n      for key, value of R\n        delete R[ key ] if value is undefined\n      return R\n    await f T, method, probe, matcher, errmsg_pattern\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"select 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[ '^frob', '^frob'],true]\n    [[ '^frob', '<frob'],false]\n    [[ '^frob', '<>frob'],false]\n    [[ '^frob', '<^>frob'],true]\n    [[ '^frob', '<>^frob'],true]\n    [[ '<frob', '<>^frob'],true]\n    [[ '>frob', '<>^frob'],true]\n    [[ 'frob', '<>^frob'],null,\"event key 'frob' has illegal sigil 'f'\"]\n    [[ '~copy', '~frob'],false]\n    [[ '~copy', '~copy'],true]\n    [[ '~copy', '^~copy'],true]\n    [[ '~copy', '<>^~copy'],true]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, errmsg_pattern, ] in probes_and_matchers\n    method = ->\n      [ d, selector, ] = probe\n      return L._select_one d, selector\n    await f T, method, probe, matcher, errmsg_pattern\n  done()\n  return null\n\n\n\n\n\n\n############################################################################################################\nunless module.parent?\n  # include = [\n  #   \"async 1\"\n  #   \"async 1 paramap\"\n  #   \"async 2\"\n  #   ]\n  # @_prune()\n  test @\n\n\n\n"
  ]
}