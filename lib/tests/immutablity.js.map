{
  "version": 3,
  "file": "immutablity.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/immutablity.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/TESTS/IMMUTABILITY'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\nL                         = require '../select'\nPD                        = require '../..'\n# { $, $async, }            = PD\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"datoms are frozen\" ] = ( T, done ) ->\n  d = PD.new_datom '^foo', { x: 42, }\n  T.ok Object.isFrozen d\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"datoms are not frozen (nofreeze)\" ] = ( T, done ) ->\n  PDNF = PD.create_nofreeze()\n  T.ok      Object.isFrozen   PD.new_datom '^foo', { x: 42, }\n  T.ok not  Object.isFrozen PDNF.new_datom '^foo', { x: 42, }\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"PD.set() sets properties, returns copy\" ] = ( T, done ) ->\n  d = PD.new_datom '^foo', { x: 42, }\n  e = PD.set    d, 'x', 108\n  f = PD.unset  d, 'x'\n  g = PD.lets f, ( d ) -> d.$fresh = true\n  T.ok d.x is 42\n  T.ok e.x is 108\n  T.ok f.$fresh is undefined\n  T.ok g.$fresh is true\n  T.ok not Object.hasOwnProperty f, 'x'\n  T.ok not Object.hasOwnProperty d, '$dirty'\n  T.ok f.$dirty is true\n  T.ok e.$dirty is true\n  T.ok d isnt e\n  T.ok d isnt f\n  T.ok e isnt f\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"PD.set() sets properties, returns copy (nofreeze)\" ] = ( T, done ) ->\n  PDNF = PD.create_nofreeze()\n  d = PDNF.new_datom '^foo', { x: 42, }\n  e = PDNF.set    d, 'x', 108\n  f = PDNF.unset  d, 'x'\n  g = PDNF.lets f, ( d ) -> d.$fresh = true\n  T.ok d.x is 42\n  T.ok e.x is 108\n  T.ok f.$fresh is undefined\n  T.ok g.$fresh is true\n  T.ok not Object.hasOwnProperty f, 'x'\n  T.ok not Object.hasOwnProperty d, '$dirty'\n  T.ok f.$dirty is true\n  T.ok e.$dirty is true\n  T.ok d isnt e\n  T.ok d isnt f\n  T.ok e isnt f\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"PD.set() accepts objects like assign()\" ] = ( T, done ) ->\n  d = PD.new_datom '^foo', { x: 42, }\n  d = PD.set    d, { x: 556, vnr: [ 1, 2, 4, ], }\n  T.ok d.x is 556\n  T.eq d.vnr, [ 1, 2, 4, ]\n  T.ok d.$dirty is true\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"PD.set() accepts objects like assign() (nofreeze)\" ] = ( T, done ) ->\n  PDNF = PD.create_nofreeze()\n  d = PDNF.new_datom '^foo', { x: 42, }\n  T.ok not Object.isFrozen d\n  d = PDNF.set    d, { x: 556, vnr: [ 1, 2, 4, ], }\n  T.ok d.x is 556\n  T.eq d.vnr, [ 1, 2, 4, ]\n  T.ok d.$dirty is true\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"PD.stamp() performs PD.set() with additional arguments\" ] = ( T, done ) ->\n  d = PD.new_datom '^foo', { x: 42, }\n  d = PD.stamp d, { x: 556, vnr: [ 1, 2, 4, ], }\n  T.ok d.x is 556\n  T.eq d.vnr, [ 1, 2, 4, ]\n  T.ok d.$dirty is true\n  T.ok d.$stamped is true\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"PD.stamp() performs PD.set() with additional arguments (nofreeze)\" ] = ( T, done ) ->\n  PDNF = PD.create_nofreeze()\n  d = PDNF.new_datom '^foo', { x: 42, }\n  d = PDNF.stamp d, { x: 556, vnr: [ 1, 2, 4, ], }\n  T.ok d.x is 556\n  T.eq d.vnr, [ 1, 2, 4, ]\n  T.ok d.$dirty is true\n  T.ok d.$stamped is true\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"select ignores values other than PODs\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[ null, '^number',],false]\n    [[ 123, '^number',],false]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ d, selector, ] = probe\n      try\n        resolve PD.select d, selector\n      catch error\n        return resolve error.message\n      return null\n  done()\n  return null\n\n\n\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"datoms are not frozen (nofreeze)\" ]\n  # test @[ \"PD.set() sets properties, returns copy (nofreeze)\" ]\n  # test @[ \"selector keypatterns\" ]\n  # test @[ \"select 2\" ]\n\n\n"
  ]
}