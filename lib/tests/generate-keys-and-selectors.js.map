{
  "version": 3,
  "file": "generate-keys-and-selectors.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/generate-keys-and-selectors.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/TESTS/SELECT'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\nPD                        = require '../..'\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\ntypes                     = require '../_types'\n{ isa\n  validate\n  type_of }               = types\nrandomize                 = require 'randomatic'\n\n\n\n\n#-----------------------------------------------------------------------------------------------------------\ngenerate_key_or_selector = ( type ) ->\n  validate.true type in [ 'key', 'selector', ]\n  use_prefix    = false\n  #.........................................................................................................\n  if type is 'key'\n    use_sigil     = true\n    use_suffix    = true\n    use_tag       = false\n    sigil_length  = 1\n  else\n    use_sigil     = true\n    use_suffix    = true\n    use_tag       = false\n    sigil_length  = 1\n  #.........................................................................................................\n  prefix_length = CND.random_integer 1, 15\n  suffix_length = CND.random_integer 3, 10\n  #.........................................................................................................\n  sigil         = if use_sigil  then ( randomize '?', sigil_length, { chars: '^<>~[]', }  ) else ''\n  prefix        = if use_prefix then ( ( randomize 'a', prefix_length ) + ':'             ) else ''\n  suffix        = if use_suffix then (   randomize 'a', suffix_length                     ) else ''\n  tag           = if use_tag    then '#stamped'                                             else ''\n  return sigil + prefix + suffix + tag\n\n#-----------------------------------------------------------------------------------------------------------\ngenerate_keys_and_selectors = ->\n  path  = PATH.join __dirname, '../../src/tests/data-for-select-benchmark.coffee'\n  lines = []\n  n     = 1500\n  lines.push '@datoms = ['\n  for _ in [ 1 .. n ]\n    key = generate_key_or_selector 'key'\n    d   = PD.new_datom key\n    lines.push '  ' + ( jr d )\n  lines.push '  ]'\n  lines.push '@selectors = ['\n  for _ in [ 1 .. n ]\n    selector  = generate_key_or_selector 'selector'\n    lines.push '  ' + ( jr selector )\n  lines.push '  ]'\n  FS.writeFileSync path, ( lines.join '\\n' ) + '\\n'\n  return null\n\n\n\n############################################################################################################\nunless module.parent?\n  generate_keys_and_selectors()\n  # test @\n  # test @[ \"selector keypatterns\" ]\n  # test @[ \"select 2\" ]\n\n"
  ]
}