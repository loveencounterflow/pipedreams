{
  "version": 3,
  "file": "group-by.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/group-by.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/TESTS/SELECT'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\ntypes                     = require '../_types'\n{ isa\n  validate\n  type_of }               = types\n#...........................................................................................................\nPD                        = require '../..'\n{ $, $async, }            = PD\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"select ignores values other than PODs\" ] = ( T, done ) ->\n  groupers =\n    odd_even: ( ( x ) -> if isa.odd x then 'odd' else 'even' )\n    vowel_consonant: ( ( x ) -> if x[ 0 ] in 'aeiou' then 'vowel' else 'consonant' )\n  probes_and_matchers = [\n    [[[1,2,3,4,5],'odd_even'],[{\"key\":\"^group\",\"name\":\"odd\",\"value\":[1]},{\"key\":\"^group\",\"name\":\"even\",\"value\":[2]},{\"key\":\"^group\",\"name\":\"odd\",\"value\":[3]},{\"key\":\"^group\",\"name\":\"even\",\"value\":[4]},{\"key\":\"^group\",\"name\":\"odd\",\"value\":[5]}],null]\n    [[[2,3,4,5],'odd_even'],[{\"key\":\"^group\",\"name\":\"even\",\"value\":[2]},{\"key\":\"^group\",\"name\":\"odd\",\"value\":[3]},{\"key\":\"^group\",\"name\":\"even\",\"value\":[4]},{\"key\":\"^group\",\"name\":\"odd\",\"value\":[5]}],null]\n    [[[1,3,2,4,6,5,8,10],\"odd_even\"],[{\"key\":\"^group\",\"name\":\"odd\",\"value\":[1,3]},{\"key\":\"^group\",\"name\":\"even\",\"value\":[2,4,6]},{\"key\":\"^group\",\"name\":\"odd\",\"value\":[5]},{\"key\":\"^group\",\"name\":\"even\",\"value\":[8,10]}],null]\n    [[[\"all\",\"odd\",\"things\",\"are\",\"unequal\"],\"vowel_consonant\"],[{\"key\":\"^group\",\"name\":\"vowel\",\"value\":[\"all\",\"odd\"]},{\"key\":\"^group\",\"name\":\"consonant\",\"value\":[\"things\"]},{\"key\":\"^group\",\"name\":\"vowel\",\"value\":[\"are\",\"unequal\"]}],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ values\n        grouper ] = probe\n      grouper     = groupers[ grouper ]\n      source      = PD.new_value_source values\n      collector   = []\n      pipeline    = []\n      pipeline.push source\n      pipeline.push PD.$group_by grouper\n      pipeline.push PD.$collect { collector, }\n      # pipeline.push PD.$show()\n      pipeline.push PD.$drain ->\n        resolve collector\n      PD.pull pipeline...\n  done()\n  return null\n\n\n\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"selector keypatterns\" ]\n  # test @[ \"select 2\" ]\n\n\n"
  ]
}