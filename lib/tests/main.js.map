{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/main.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAd5B;;;EAgBA,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,QAAR,EApB5B;;;EAyBA,CAAA,GAAI;;EACD,CAAA,QAAA,CAAA,CAAA;AACD,QAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,EAAA,KAAA,EAAA;IAAA,KAAA,GAAQ,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,WAArB,CAAV;IACR,KAAA,uCAAA;;MACE,MAAA,GAAS,OAAA,CAAQ,IAAR;MACT,KAAA,aAAA;;QACE,KAAA,CAAM,OAAN,EAAe,CAAA,CAAA,CAAG,IAAH,CAAQ,CAAR,CAAA,CAAW,GAAX,CAAA,CAAf;QACA,IAA8C,cAA9C;UAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,cAAA,CAAA,CAAiB,GAAA,CAAI,GAAJ,CAAjB,CAAA,CAAV,EAAN;;QACA,CAAG,CAAA,GAAA,CAAH,GAAW,KAAK,CAAC,IAAN,CAAW,CAAX;MAHb;IAFF;WAMA,IAAA,CAAK,CAAL;EARC,CAAA,CAAH,CAAA;AA1BA",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/TESTS/MAIN'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nOS                        = require 'os'\ntest                      = require 'guy-test'\nglob                      = require 'globby'\n\n\n\n############################################################################################################\nL = @\ndo ->\n  paths = glob.sync PATH.join __dirname, '*.test.js'\n  for path in paths\n    module = require path\n    for key, value of module\n      debug '20922', \"#{path}##{key}\"\n      throw new Error \"duplicate key #{rpr key}\" if L[ key ]?\n      L[ key ] = value.bind L\n  test L\n\n\n"
  ]
}