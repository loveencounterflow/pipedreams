{
  "version": 3,
  "file": "add_position.js",
  "sourceRoot": "..",
  "sources": [
    "src/add_position.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAZ5B;;;EAcA,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,CAAA,CAAE,EAAF,CAAA,GAA4B,GAA5B,EAfA;;;EAiBA,KAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,CAAA,GAE4B,KAF5B,EAlBA;;;EAuBA,IAAC,CAAA,aAAD,GAAiB,QAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;AACjB,QAAA,QAAA,EAAA,IAAA,EAAA;IAoBE,QAAA,GAAY;IACZ,KAAA,GAAY;IACZ,IAAA,GAAY,MAAA,CAAO,MAAP,EAtBd;;AAwBE,WAAO,IAAC,CAAA,CAAD,CAAG,CAAE,IAAF,CAAH,EAAc,CAAE,CAAF,EAAK,IAAL,CAAA,GAAA,EAAA;;MAEnB,IAAG,CAAA,KAAK,IAAR;QACE,IAAG,aAAH;UACE,IAAG,QAAH;YAAkB,KAAA,GAAQ,IAAC,CAAA,IAAD,CAAM,KAAN,EAAa,QAAA,CAAE,CAAF,CAAA;cAAS,CAAC,CAAC,KAAF,GAAU;qBAAM,CAAC,CAAC,MAAF,GAAW;YAApC,CAAb,EAA1B;WAAA,MAAA;YACkB,KAAA,GAAQ,IAAC,CAAA,IAAD,CAAM,KAAN,EAAa,QAAA,CAAE,CAAF,CAAA;qBAAS,CAAC,CAAC,KAAF,GAAU;YAAnB,CAAb,EAD1B;;UAEA,IAAA,CAAK,KAAL,EAHF;SADF;OAAA,MAAA;;QAOE,IAAG,aAAH;UACE,IAAA,CAAK,KAAL,EADF;;QAEA,KAAA,GAAe,CAAE,GAAG,CAAC,MAAJ,CAAW,CAAX,CAAF,CAAH,GAAyB,CAAzB,GAAgC,IAAC,CAAA,SAAD,CAAW,QAAX,EAAqB;UAAE,KAAA,EAAO;QAAT,CAArB;QAC5C,IAAwD,QAAxD;UAAA,KAAA,GAAc,IAAC,CAAA,IAAD,CAAM,KAAN,EAAa,QAAA,CAAE,CAAF,CAAA;mBAAS,CAAC,CAAC,MAAF,GAAW;UAApB,CAAb,EAAd;;QACA,QAAA,GAAY,MAXd;OADJ;;AAcI,aAAO;IAfY,CAAd;EAzBQ;AAvBjB",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/ADD_POSITION'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\n{ jr, }                   = CND\n#...........................................................................................................\ntypes                     = require './_types'\n{ isa\n  validate\n  type_of }               = types\n\n#-----------------------------------------------------------------------------------------------------------\n@$add_position = ->\n  ###\n\n  ```\n  {\"value\":1,\"$first\":true,\"$last\":true}\n  ```\n\n  ```\n  {\"value\":1,\"$first\":true}\n  {\"value\":2,\"$last\":true}\n  ```\n\n  ```\n  {\"value\":1,\"$first\":true}\n  {\"value\":2}\n  {\"value\":3}\n  {\"value\":4}\n  {\"value\":5,\"$last\":true}\n  ```\n\n  ###\n  is_first  = true\n  prv_d     = null\n  last      = Symbol 'last'\n  #.........................................................................................................\n  return @$ { last, }, ( d, send ) =>\n    #.......................................................................................................\n    if d is last\n      if prv_d?\n        if is_first then  prv_d = @lets prv_d, ( d ) -> d.$last = true; d.$first = true\n        else              prv_d = @lets prv_d, ( d ) -> d.$last = true\n        send prv_d\n    #.......................................................................................................\n    else\n      if prv_d?\n        send prv_d\n      prv_d     = if ( isa.object d ) then d else @new_datom '^value', { value: d, }\n      prv_d     = ( @lets prv_d, ( d ) -> d.$first = true) if is_first\n      is_first  = false\n    #.......................................................................................................\n    return null\n\n\n\n\n"
  ]
}